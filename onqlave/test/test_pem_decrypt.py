import base64
from cryptography.hazmat.primitives import serialization
from cryptography.hazmat.backends import default_backend
from Crypto.IO import PEM
from Crypto.PublicKey import RSA
from cryptography.hazmat.primitives.serialization import load_pem_private_key

# Assuming the base64 encoded private key is stored in encoded_key
encoded_key = 'LS0tLS1CRUdJTiBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQpNSUlGTFRCWEJna3Foa2lHOXcwQkJRMHdTakFwQmdrcWhraUc5dzBCQlF3d0hBUUlkUEV4S0R5bG5SRUNBZ2ZRCk1Bd0dDQ3FHU0liM0RRSUpCUUF3SFFZSllJWklBV1VEQkFFcUJCQm9IUm0xbStmTGlWWTlxWFdDbDhLcUJJSUUKMEZ6dVBOWDdzaThJTDZVZXdINHQ4QWNpQmw2NDVYTGU0ellMcU1pWHJrNk1tSUR2bE5tUHZCeGc0Wk13aSt0cgpKaGdjbE5DQzVOTHkvL3lJRldTVmpYSmlDSlFFbEdJa21GR00ybE5JMUw5VnhWblJROW5xYXJYZFQ4RGIwMDM2CjhyVGV5NUFWbDJ6OWo1YmdOUTRZUDI5bnkrNnNZemFsWEYyU1ZkTEFxSm52bjhmT0Q0Ty9Db0p1NTZEbUx0cDQKeVdBOUZMM2cwUzYyazM5SGFhVzNwdHVPVGl1SGl2L2dKNnhxQTNpNktJYzRha2t6TDRkM2lNYlk0S2dRRFJmQgpGK29CZGZRVHN5Ynp2UEFkVDdOQlgvKzNPYmV0QTRPbmU2Z21LT2NRNEkxejJNcWVoYVN4QlcxTGUyMXc2WlR5Ck1VMEdlQnpqYThWL3hOQWRiUUlLZHhBcEM4dU1ITHFwdVp6dld2UGVDMERaUmwrUHl0cDVveU9jTEUybFo1d0YKd0pLRGNaUkw0am1aaEtuN2pEekRpbHk0WVFST3h2QkRwR0dEcnpHVlVhYU16cVlQNXZJY0tTam5rZFYzQWJTWQo0S0ZKd0d5MFNXc0VyNlExT2tyOGZHTFhxMXQxcHd5dFBIUHJuUFB5WkdkSG92dFF1RWplMlpTQzlNb1h1T1dGCnBxNkxFUEdTVi9wbUhIY055cFo2VDhEa055di8xMm1mVTJHOTNrQko4Q1Q3ZG5NOG9ZMTZDNkdIVHVDUkpPQ2sKRVhYL0RiTWNoQ3B2dHRlVDZONThwa0VHb3poejd1NkFtZGVnLzg4NHpmSlptTWF3SStwODR5MmJDSmFiakNIRQpod0d3d0YwamVRNDdMYzZCZktLZHU2M3BPWWcvcUxaY040MDNmV1hpRkZIdXROcDF1cFNFZHBiMHlYSlczbkEyCnphcFlBUVdOZ01XOHhXVzBqY2V2YVRoVFpnSmJqQWtveUhTTkRucE5oOVJ2cWVsWFdOZXZDdVlBWWhsVWVTMTIKV1MraDNqVzN0OFR1bmE3dVU3c3BqUmxBNVBaZ21Rd0NwRHR1blhjMmpETHBzUklkTUtZTW4rSXZVNFQ4ZE5NNApDR3JqMUJlSnlBdGQvcEN2SmRGYUdwWGZEVHVyWHVMWmc0Y0tpZms5R0RhUTBMTGtkWUVxVVhFK3h2a1JDM2xtCitrVjZHQmVoNVE2aEFZRjdoditsVUtUM2ZreFIvRkhSNENNSG5WWjczMUhLVDE1Y095MTVydUo4amR4cGluMUUKS2dOK1VTcHZLaHhlNGhxOFNvUzNGazlJc0lpS2syYkpZdWJETFJqVThaRXlLN20wR014V3ZxZlcxKzZpcEgwagpaZFJPVzVKcXY5My9yV2N6aTZ2aUx6bWpmaEhKNXltblpsNGxzc1Jja0gvdVpzcTZsOSs5SmROZXZDclhtZFRyCjhqM2JmR0xBVXpHVFRuWXdMWFZLQXpiVlR4U1JmRWU1d3BXaXRBTWVaN2R0QUZYTVRQanRKbGJlUjdxUHh1bHAKMjlEdXdYUmsvTUsvZjkrcWdCZlVFOTc0YWNpaElvTWlBNW9CMkdONGdmTWwzcyttNFlyY3pFYW1NOXNaejY2bwpBMjRRcktrOXdRaHJpeFJ1VDl1WmhUOGorNWFLVXhuVkEyMkxwSEdDVjhCTHFwL2xpTTJCM001c2Q3dDkxQUpTClNObUk0WXFKNXUwb0krWmRzbmQvdkZBNVNUOE1TV0VnNFNETkJ2R0ExeERMeXFPeW1nMjZLTE9XWUhCMmNOSm8KMisyUjk3bDVXNC9venhIMEpaWkloNEtXbzNUVjZzcWJDcnhOc2JxQW5ZSXlyWGRWMGUyUUNiSEREVm43NDlZQQpZM25LTGQvamV4dEZlTWpLK0xqS0djcTFhUCsyVlNqV0ZsUXd5TGVJRENzblNxLzNPblVld291bktMUXBBV3EyCjNpRTBMdWhDOHFvOUxHRFdtay9xWHpUcEZvVzNWTTBjYUovWldDUHRyTmVZenVtYkxzZW8xRC9BSzBuK1pEWDgKc29oam84Vm9QS2NUdnY5STUyYkhyaG9wQVN4L01CcllsdklzVGRuUVgxbTZ3eHppaFZIdkJsK3JraVNkRUZvbQpISHFXOXpKVk5odlE1K01SR3ZMYmlaZTVQbzR6YlRiMGc3c01WakV2b3RTWAotLS0tLUVORCBFTkNSWVBURUQgUFJJVkFURSBLRVktLS0tLQo='

# Decode the Base64 encoded string
decoded_pem = base64.b64decode(encoded_key).decode('ISO-8859-1')
password=b'onq.1neBvCfZXMeVdbsNcUZmEun1VkWOERkfppFGjljo344Wofa4fugeGh9P93uJo3npG5V6xd0hKY0yuOH8K0AnmTZUmYK8pBwypDVSApZnXzRsKcRXTQmJUkJTxx4KLy5c'
# Now load the private key from the decoded PEM
try:
    # private_key = serialization.load_pem_private_key(
    #     decoded_pem,
    #     password=password,  # replace with your password if there is one
    #     # backend=default_backend()
    # )
    private_key = RSA.import_key(decoded_pem,password.decode())
    # private_key = load_pem_private_key(
    #     block,password
    # )
    print(f"Private key loaded successfully: {private_key}")
except Exception as e:
    print("An error occurred:", str(e))


# Publishing python package to pypi
name: Publish Production
on:
  push:
    tags:
      - 'v0.*.*'

permissions:
  contents: read

jobs:
  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') && endsWith(github.event.base_ref, '/main')
    runs-on: ubuntu-latest
    steps:
      - name: "print debug"
        run: |
          echo ${{github.event.base_ref}}

      - name: "Release PR info"
        if: github.event_name != 'workflow_dispatch'
        run: echo "PR ${{ github.event.number }}"

      - uses: actions/checkout@v3

      - name: "Set up Python"
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: "Install dependencies"
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Extract tag version
        id: extract_tag
        run: echo "::set-output name=tag::$(echo ${{ github.ref }} | sed -e 's/^refs\/tags\/v//' -e 's/^refs\/heads\/v//')"

      - name: Update version of Python package
        run: |
          sed -i "s/version='.*'/version='${{ steps.extract_tag.outputs.tag }}'/g" setup.py

      # package_name = 'onqlave-python'
      - name: "Update python package name"
        env:
          PACKAGE_NAME: ${{ secrets.PACKAGE_NAME_DEV }}
        run: |
          sed -i "s/package_name = '.*'/package_name = '${{ env.PACKAGE_NAME }}'/g" setup.py

      # build python package with setup.py
      - name: "Build package"
        run: |
          python setup.py sdist bdist_wheel

      # publish python package to pypi
      - name: "Publish package"
        uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN_PROD }}
          package_glob: dist/*.whl dist/*.tar.gz
          skip_existing: true

      ############# GITHUB RELEASE ##############
      - name: Extract release notes
        id: extract-release-notes
        uses: ffurrer2/extract-release-notes@v1


      - name: "Create a GitHub release v${{ steps.extract_tag.outputs.tag }}"
        uses: ncipollo/release-action@v1
        with:
          tag: "v${{ steps.extract_tag.outputs.tag }}"
          name: "Release v${{ steps.extract_tag.outputs.tag }}"
          body: |
            ## Release notes:
            ${{ steps.extract-release-notes.outputs.release_notes }}
